{
    "swagger": "2.0",
    "info": {
        "title": "beego Test API",
        "description": "beego has a very cool tools to autogenerate documents for your API",
        "version": "1.0.0",
        "termsOfService": "http://beego.me/",
        "contact": {
            "email": "astaxie@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        }
    },
    "basePath": "/v1",
    "paths": {
        "/estado_inscripcion/": {
            "get": {
                "tags": [
                    "estado_inscripcion"
                ],
                "description": "get EstadoInscripcion",
                "operationId": "EstadoInscripcionController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.EstadoInscripcion"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "estado_inscripcion"
                ],
                "description": "create EstadoInscripcion",
                "operationId": "EstadoInscripcionController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for EstadoInscripcion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.EstadoInscripcion"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.EstadoInscripcion"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/estado_inscripcion/{id}": {
            "get": {
                "tags": [
                    "estado_inscripcion"
                ],
                "description": "get EstadoInscripcion by id",
                "operationId": "EstadoInscripcionController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.EstadoInscripcion"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "estado_inscripcion"
                ],
                "description": "update the EstadoInscripcion",
                "operationId": "EstadoInscripcionController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for EstadoInscripcion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.EstadoInscripcion"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.EstadoInscripcion"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "estado_inscripcion"
                ],
                "description": "delete the EstadoInscripcion",
                "operationId": "EstadoInscripcionController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/inscripcion/": {
            "get": {
                "tags": [
                    "inscripcion"
                ],
                "description": "get Inscripcion",
                "operationId": "InscripcionController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Inscripcion"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "inscripcion"
                ],
                "description": "create Inscripcion",
                "operationId": "InscripcionController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Inscripcion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Inscripcion"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.Inscripcion"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/inscripcion/{id}": {
            "get": {
                "tags": [
                    "inscripcion"
                ],
                "description": "get Inscripcion by id",
                "operationId": "InscripcionController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Inscripcion"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "inscripcion"
                ],
                "description": "update the Inscripcion",
                "operationId": "InscripcionController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Inscripcion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Inscripcion"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Inscripcion"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "inscripcion"
                ],
                "description": "delete the Inscripcion",
                "operationId": "InscripcionController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/propuesta/": {
            "get": {
                "tags": [
                    "propuesta"
                ],
                "description": "get Propuesta",
                "operationId": "PropuestaController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Propuesta"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "propuesta"
                ],
                "description": "create Propuesta",
                "operationId": "PropuestaController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Propuesta content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Propuesta"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.Propuesta"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/propuesta/{id}": {
            "get": {
                "tags": [
                    "propuesta"
                ],
                "description": "get Propuesta by id",
                "operationId": "PropuestaController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Propuesta"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "propuesta"
                ],
                "description": "update the Propuesta",
                "operationId": "PropuestaController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Propuesta content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Propuesta"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Propuesta"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "propuesta"
                ],
                "description": "delete the Propuesta",
                "operationId": "PropuestaController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/tipo_inscripcion/": {
            "get": {
                "tags": [
                    "tipo_inscripcion"
                ],
                "description": "get TipoInscripcion",
                "operationId": "TipoInscripcionController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.TipoInscripcion"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "tipo_inscripcion"
                ],
                "description": "create TipoInscripcion",
                "operationId": "TipoInscripcionController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for TipoInscripcion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.TipoInscripcion"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.TipoInscripcion"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/tipo_inscripcion/{id}": {
            "get": {
                "tags": [
                    "tipo_inscripcion"
                ],
                "description": "get TipoInscripcion by id",
                "operationId": "TipoInscripcionController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.TipoInscripcion"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "tipo_inscripcion"
                ],
                "description": "update the TipoInscripcion",
                "operationId": "TipoInscripcionController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for TipoInscripcion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.TipoInscripcion"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.TipoInscripcion"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "tipo_inscripcion"
                ],
                "description": "delete the TipoInscripcion",
                "operationId": "TipoInscripcionController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        },
        "/tipo_proyecto/": {
            "get": {
                "tags": [
                    "tipo_proyecto"
                ],
                "description": "get TipoProyecto",
                "operationId": "TipoProyectoController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.TipoProyecto"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "tipo_proyecto"
                ],
                "description": "create TipoProyecto",
                "operationId": "TipoProyectoController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for TipoProyecto content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.TipoProyecto"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.TipoProyecto"
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            }
        },
        "/tipo_proyecto/{id}": {
            "get": {
                "tags": [
                    "tipo_proyecto"
                ],
                "description": "get TipoProyecto by id",
                "operationId": "TipoProyectoController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.TipoProyecto"
                        }
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "tipo_proyecto"
                ],
                "description": "update the TipoProyecto",
                "operationId": "TipoProyectoController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for TipoProyecto content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.TipoProyecto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.TipoProyecto"
                        }
                    },
                    "400": {
                        "description": "the request contains incorrect syntax"
                    }
                }
            },
            "delete": {
                "tags": [
                    "tipo_proyecto"
                ],
                "description": "delete the TipoProyecto",
                "operationId": "TipoProyectoController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "404": {
                        "description": "not found resource"
                    }
                }
            }
        }
    },
    "definitions": {
        "models.Admision": {
            "title": "Admision",
            "type": "object",
            "properties": {
                "AceptaTerminos": {
                    "type": "boolean"
                },
                "Aspirante": {
                    "type": "integer",
                    "format": "int64"
                },
                "Enfasis": {
                    "$ref": "#/definitions/models.Enfasis"
                },
                "EstadoAdmision": {
                    "$ref": "#/definitions/models.EstadoAdmision"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Periodo": {
                    "$ref": "#/definitions/models.PeriodoAcademico"
                },
                "ProgramaAcademico": {
                    "type": "integer",
                    "format": "int64"
                },
                "ReciboInscripcion": {
                    "type": "integer",
                    "format": "int64"
                },
                "ReciboMatricula": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "models.Enfasis": {
            "title": "Enfasis",
            "type": "object",
            "properties": {
                "Activo": {
                    "type": "boolean"
                },
                "CodigoAbreviacion": {
                    "type": "string"
                },
                "Descripcion": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Nombre": {
                    "type": "string"
                },
                "NumeroOrden": {
                    "type": "number",
                    "format": "double"
                },
                "ProgramaAcademico": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "models.EstadoAdmision": {
            "title": "EstadoAdmision",
            "type": "object",
            "properties": {
                "Activo": {
                    "type": "boolean"
                },
                "CodigoAbreviacion": {
                    "type": "string"
                },
                "Descripcion": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Nombre": {
                    "type": "string"
                },
                "NumeroOrden": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "models.EstadoInscripcion": {
            "title": "EstadoInscripcion",
            "type": "object",
            "properties": {
                "Activo": {
                    "type": "boolean"
                },
                "CodigoAbreviacion": {
                    "type": "string"
                },
                "Descripcion": {
                    "type": "string"
                },
                "FechaCreacion": {
                    "type": "string",
                    "format": "datetime"
                },
                "FechaModificacion": {
                    "type": "string",
                    "format": "datetime"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Nombre": {
                    "type": "string"
                },
                "NumeroOrden": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "models.GrupoInvestigacion": {
            "title": "GrupoInvestigacion",
            "type": "object",
            "properties": {
                "Activo": {
                    "type": "boolean"
                },
                "Descripcion": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Nombre": {
                    "type": "string"
                },
                "NumeroOrden": {
                    "type": "number",
                    "format": "double"
                },
                "Sigla": {
                    "type": "string"
                }
            }
        },
        "models.Inscripcion": {
            "title": "Inscripcion",
            "type": "object",
            "properties": {
                "AceptaTerminos": {
                    "type": "boolean"
                },
                "Activo": {
                    "type": "boolean"
                },
                "EnfasisId": {
                    "type": "integer",
                    "format": "int64"
                },
                "EstadoInscripcionId": {
                    "$ref": "#/definitions/models.EstadoInscripcion"
                },
                "FechaAceptaTerminos": {
                    "type": "string",
                    "format": "datetime"
                },
                "FechaCreacion": {
                    "type": "string",
                    "format": "datetime"
                },
                "FechaModificacion": {
                    "type": "string",
                    "format": "datetime"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "PeriodoId": {
                    "type": "integer",
                    "format": "int64"
                },
                "PersonaId": {
                    "type": "integer",
                    "format": "int64"
                },
                "ProgramaAcademicoId": {
                    "type": "integer",
                    "format": "int64"
                },
                "ReciboInscripcionId": {
                    "type": "integer",
                    "format": "int64"
                },
                "ReciboMatriculaId": {
                    "type": "integer",
                    "format": "int64"
                },
                "TipoInscripcionId": {
                    "$ref": "#/definitions/models.TipoInscripcion"
                }
            }
        },
        "models.LineaInvestigacion": {
            "title": "LineaInvestigacion",
            "type": "object",
            "properties": {
                "Activo": {
                    "type": "boolean"
                },
                "CodigoAbreviacion": {
                    "type": "string"
                },
                "Descripcion": {
                    "type": "string"
                },
                "GrupoInvestigacion": {
                    "type": "integer",
                    "format": "int64"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Nombre": {
                    "type": "string"
                },
                "NumeroOrden": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "models.PeriodoAcademico": {
            "title": "PeriodoAcademico",
            "type": "object",
            "properties": {
                "Activo": {
                    "type": "boolean"
                },
                "CodigoAbreviacion": {
                    "type": "string"
                },
                "Descripcion": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Nombre": {
                    "type": "string"
                },
                "NumeroOrden": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "models.Propuesta": {
            "title": "Propuesta",
            "type": "object",
            "properties": {
                "Admision": {
                    "$ref": "#/definitions/models.Admision"
                },
                "FormatoProyecto": {
                    "type": "integer",
                    "format": "int64"
                },
                "GrupoInvestigacion": {
                    "$ref": "#/definitions/models.GrupoInvestigacion"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "LineaInvestigacion": {
                    "$ref": "#/definitions/models.LineaInvestigacion"
                },
                "Nombre": {
                    "type": "string"
                },
                "Resumen": {
                    "type": "string"
                },
                "TipoProyecto": {
                    "$ref": "#/definitions/models.TipoProyecto"
                }
            }
        },
        "models.TipoInscripcion": {
            "title": "TipoInscripcion",
            "type": "object",
            "properties": {
                "Activo": {
                    "type": "boolean"
                },
                "CodigoAbreviacion": {
                    "type": "string"
                },
                "Descripcion": {
                    "type": "string"
                },
                "FechaCreacion": {
                    "type": "string",
                    "format": "datetime"
                },
                "FechaModificacion": {
                    "type": "string",
                    "format": "datetime"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Nombre": {
                    "type": "string"
                },
                "NumeroOrden": {
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "models.TipoProyecto": {
            "title": "TipoProyecto",
            "type": "object",
            "properties": {
                "Activo": {
                    "type": "boolean"
                },
                "CodigoAbreviacion": {
                    "type": "string"
                },
                "Descripcion": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Nombre": {
                    "type": "string"
                },
                "NumeroOrden": {
                    "type": "number",
                    "format": "double"
                }
            }
        }
    },
    "tags": [
        {
            "name": "tipo_inscripcion",
            "description": "TipoInscripcionController operations for TipoInscripcion\n"
        },
        {
            "name": "inscripcion",
            "description": "InscripcionController operations for Inscripcion\n"
        },
        {
            "name": "estado_inscripcion",
            "description": "EstadoInscripcionController operations for EstadoInscripcion\n"
        },
        {
            "name": "propuesta",
            "description": "PropuestaController operations for Propuesta\n"
        },
        {
            "name": "tipo_proyecto",
            "description": "TipoProyectoController operations for TipoProyecto\n"
        }
    ]
}